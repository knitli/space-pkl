/// Error handling and constraint violation tests
///
/// This test validates that schemas properly handle invalid values and edge cases.

amends "pkl:test"

import "../../../pkl-schemas/Workspace.pkl" as workspace
import "../../../pkl-schemas/Project.pkl" as project

facts {
  // Test that enum validation works at type level
  ["workspace hasher optimization accepts valid value"] {
    let (config = new workspace.HasherConfig {
      optimization = "accuracy" as workspace.HasherOptimization
    })
    config.optimization == "accuracy"
  }

  ["project language accepts valid value"] {
    "typescript" is project.LanguageType
  }

  // Test enum type checking directly
  ["HasherOptimization accepts valid values"] {
    "accuracy" is workspace.HasherOptimization &&
    "performance" is workspace.HasherOptimization
  }

  ["LanguageType accepts valid values"] {
    "typescript" is project.LanguageType &&
    "javascript" is project.LanguageType &&
    "python" is project.LanguageType
  }

  // Test edge cases and boundary conditions
  ["empty string is not valid for enums"] {
    !("" is project.LanguageType) &&
    !("" is workspace.HasherOptimization)
  }

  ["null is not valid for enums"] {
    !(null is project.LanguageType) &&
    !(null is workspace.HasherOptimization)
  }

  ["invalid values are rejected by enums"] {
    !("invalid-lang" is project.LanguageType) &&
    !("invalid-opt" is workspace.HasherOptimization)
  }
}

examples {
  // Error handling validation is done in facts section
}
