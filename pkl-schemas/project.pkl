//! Moon Configuration Schema for Pkl
//!
//! Generated by space-pkl v0.1.0
//! Source: https://github.com/knitli/space-pkl
//! Moon: https://github.com/moonrepo/moon
//!
//! This schema provides type-safe configuration templates for Moon workspace management.
//
//! (c) 2025 Stash AI Inc (knitli)
//!   - Created by Adam Poulemanos ([@bashandbone](https://github.com/bashandbone))
//! Licensed under the [Plain MIT License](https://plainlicense.org/licenses/permissive/mit/)
//!



/// Moon project configuration schema
///
/// ## Example
///
/// ```pkl
/// import "Project.pkl"
///
/// config: Project = new {
///   // Add your configuration here
/// }
/// ```
module Project


/// The scope and or relationship of the dependency.

typealias DependencyScope = "build" | "development" | "peer" | "production" | "root"
/// The source where the dependency comes from. Either explicitly
/// defined in configuration, or implicitly derived from source files.

typealias DependencySource = "explicit" | "implicit"
/// Expanded information about a project dependency.

typealias DependencyConfig = Any
/// Expanded information about a project dependency.

typealias ProjectDependsOn = Any
/// Configures `Dockerfile` generation.

typealias ProjectDockerFileConfig = Any
/// Configures aspects of the Docker scaffolding process.

typealias ProjectDockerScaffoldConfig = Any
/// Configures our Docker integration.

typealias ProjectDockerConfig = Any
/// Supported programming languages that each project can be written in.

typealias LanguageType = "bash" | "batch" | "go" | "javascript" | "php" | "python" | "ruby" | "rust" | "typescript" | "unknown"
/// A mapping of file paths and file globs to owners.

typealias OwnersPaths = Any
/// Defines ownership of source code within the current project, by mapping
/// file paths and globs to owners. An owner is either a user, team, or group.

typealias OwnersConfig = Any
/// Platforms that each programming language can belong to.

typealias PlatformType = "bun" | "deno" | "node" | "python" | "rust" | "system" | "unknown"
/// Expanded information about the project.

typealias ProjectMetadataConfig = Any
/// The technology stack of the project, for categorizing.

typealias StackType = "backend" | "frontend" | "infrastructure" | "systems" | "unknown"
/// Configures a command to execute, and its arguments.

typealias TaskArgs = Any
/// Expanded information about a task dependency.

typealias TaskDependencyConfig = Any
/// Configures another task that a task depends on.

typealias TaskDependency = Any

typealias TaskOptionEnvFile = Any
/// The strategy in which to merge a specific task option.

typealias TaskMergeStrategy = "append" | "prepend" | "preserve" | "replace"
/// The operating system in which to only run this task on.

typealias TaskOperatingSystem = "linux" | "macos" | "windows"
/// The style in which task output will be printed to the console.

typealias TaskOutputStyle = "buffer" | "buffer-only-failure" | "hash" | "none" | "stream"
/// The priority levels a task can be bucketed into.

typealias TaskPriority = "critical" | "high" | "normal" | "low"
/// A list of available shells on Unix.

typealias TaskUnixShell = "bash" | "elvish" | "fish" | "ion" | "murex" | "nu" | "pwsh" | "xonsh" | "zsh"
/// A list of available shells on Windows.

typealias TaskWindowsShell = "bash" | "elvish" | "fish" | "murex" | "nu" | "pwsh" | "xonsh"
/// Options to control task inheritance and execution.

typealias TaskOptionsConfig = Any
/// Preset options to inherit.

typealias TaskPreset = "server" | "watcher"
/// The type of task.

typealias TaskType = "build" | "run" | "test"
/// Configures a task to be ran within the action pipeline.

typealias TaskConfig = Any
/// Represents an unresolved version or alias that must be resolved to a fully-qualified version.

typealias UnresolvedVersionSpec = Any
/// Overrides top-level toolchain settings.

typealias ProjectToolchainCommonToolConfig = Any
/// Strategies and protocols for locating plugins.

typealias PluginLocator = Any
/// Configures an individual toolchain.

typealias ToolchainPluginConfig = Any

typealias ProjectToolchainEntry = Any
/// Overrides top-level toolchain settings, scoped to this project.

typealias ProjectToolchainConfig = Any
/// The type of project, for categorizing.

typealias ProjectType = "application" | "automation" | "configuration" | "library" | "scaffolding" | "tool" | "unknown"
/// Controls how tasks are inherited.

typealias ProjectWorkspaceInheritedTasksConfig = Any
/// Overrides top-level workspace settings, scoped to this project.

typealias ProjectWorkspaceConfig = Any
/// Configures information and tasks for a project.
/// Docs: https://moonrepo.dev/docs/config/project

typealias ProjectConfig = Any

