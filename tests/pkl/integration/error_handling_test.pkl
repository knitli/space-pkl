/// Error handling and constraint violation tests
///
/// This test validates that invalid configurations are properly rejected.

amends "pkl:test"

import "../../../pkl-schemas/workspace.pkl" as workspace
import "../../../pkl-schemas/project.pkl" as project

facts {
  // Test that invalid enum values are rejected at runtime
  ["invalid workspace hasher optimization throws error"] = (
    let (result = try {
      new {
        hasher = new {
          optimization = "invalid-optimization" as workspace.HasherOptimization
        }
      }
    } catch (e) {
      "error"
    })
    result == "error"
  )

  ["invalid project language throws error"] = (
    let (result = try {
      new {
        language = "invalid-language" as project.LanguageType
      }
    } catch (e) {
      "error"
    })
    result == "error"
  )

  ["invalid dependency scope throws error"] = (
    let (result = try {
      new {
        dependsOn = new {
          someLib = new {
            scope = "invalid-scope" as project.DependencyScope
          }
        }
      }
    } catch (e) {
      "error"
    })
    result == "error"
  )

  // Test edge cases and boundary conditions
  ["empty string is not valid for enums"] = (
    !("" is project.LanguageType) &&
    !("" is workspace.HasherOptimization)
  )

  ["null is not valid for enums"] = (
    !(null is project.LanguageType) &&
    !(null is workspace.HasherOptimization)
  )
}

examples {
  // Error handling validation is done in facts section
}
